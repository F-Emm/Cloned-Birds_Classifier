Parameters:
  CodePipelineProjectName:
    Description: CI CodePipeline Project Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: birds-classfier-cicd
  CodeBuildProjectName:
    Description: CI CodeBuild Project Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: birds-classfier-image-build
  ElasticApplicationName:
    Description: Elastic Beanstalk application name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: birds-classfier
  S3BucketName:
    Description: Name of the S3 Bucket
    Type: String
    Default: s3-bucket-birds-classifier-cicd
  S3BucketNameTrainedModel:
    Description: Name of the S3 Bucket containing the trained model
    Type: String
    Default: birds-classifier-model-bucket

Resources:

  CloudFormationCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref CodePipelineProjectName
      RoleArn: !GetAtt BirdsClassifierCodePipelineServiceRole.Arn
      Stages:
        - Name: SourceStage
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              OutputArtifacts:
                - Name: SourceArtifacts
              RunOrder: 1
              Configuration:
                BranchName: master
                ConnectionArn: !Sub arn:aws:codestar-connections:us-east-1:${AWS::AccountId}:connection/d64c6f5e-3572-4ed7-b2a6-da6b6883bc98
                DetectChanges: "true"
                FullRepositoryId: patrickbrus/Birds_Classifier_API
                OutputArtifactFormat: CODE_ZIP
        - Name: BuildStage
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              OutputArtifacts:
                - Name: BuildArtifacts
              InputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                ProjectName: !Ref CodeBuildDockerBirdsClassifierImage 
        - Name: DeployStage
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk
                Version: "1"
              RunOrder: 1
              Configuration:
                ApplicationName: !Sub ${ElasticApplicationName}-app
                EnvironmentName: !Sub ${ElasticApplicationName}-env
              InputArtifacts:
                - Name: BuildArtifacts
      ArtifactStore:
        Location: !Ref S3BucketName
        Type: S3

  BirdsClassifierCodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${CodePipelineProjectName}-codepipeline-base-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: '*'
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
                Effect: Allow
              - Action:
                  - codestar-connections:UseConnection
                Resource: '*'
                Effect: Allow
              - Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: '*'
                Effect: Allow
              - Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: '*'
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource: '*'
                Effect: Allow
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource: '*'
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                Resource: '*'
                Effect: Allow
              - Effect: Allow
                Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                Resource: '*'
              - Effect: Allow
                Action:
                  - servicecatalog:ListProvisioningArtifacts
                  - servicecatalog:CreateProvisioningArtifact
                  - servicecatalog:DescribeProvisioningArtifact
                  - servicecatalog:DeleteProvisioningArtifact
                  - servicecatalog:UpdateProduct
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:DescribeImages
                Resource: '*'
              - Effect: Allow
                Action:
                  - states:DescribeExecution
                  - states:DescribeStateMachine
                  - states:StartExecution
                Resource: '*'
              - Effect: Allow
                Action:
                  - appconfig:StartDeployment
                  - appconfig:StopDeployment
                  - appconfig:GetDeployment
                Resource: '*'

  CodeBuildDockerBirdsClassifierImage:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Ref CodeBuildProjectName
      ServiceRole: !Ref CodeBuildBirdsClassifierImageServiceRole
      Artifacts:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub ${CodeBuildProjectName}-CloudWatchLogs-BuildLogGroup-Name
      Environment:
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        Image: aws/codebuild/standard:6.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: latest
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: birds-classifier-image
          - Name: BUCKET_NAME
            Type: PLAINTEXT
            Value: !Sub {S3BucketNameTrainedModel}
          - Name: BUCKET_REGION
            Type: PLAINTEXT
            Value: eu-central-1
      Source:
        Type: CODEPIPELINE
        BuildSpec: aws_build_specs/buildspec_zip.yaml

  CodeBuildBirdsClassifierImageServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${CodeBuildProjectName}-codebuild-base-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CodeBuildProjectName}-CloudWatchLogs-BuildLogGroup-Name
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CodeBuildProjectName}-CloudWatchLogs-BuildLogGroup-Name:*
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}/*
                  - !Sub arn:aws:s3::${S3BucketNameTrainedModel}/*
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/CodeBuildDockerBirdsClassifierImage-*
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
  
  CloudFormationS3BucketForCodePipeline:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${S3BucketName}
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
  
  CloudFormationElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties: 
      ApplicationName: !Sub ${ElasticApplicationName}-app
  
  CloudFormationElasticBeanstalkEvnironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref CloudFormationElasticBeanstalkApplication
      EnvironmentName: !Sub ${ElasticApplicationName}-env
      TemplateName:
        Ref: CloudFormationEBConfigurationTemplate
      #VersionLabel:
      #  Ref: CloudFormationEBApplicationVersion

  #CloudFormationEBApplicationVersion:
  #  Type: AWS::ElasticBeanstalk::ApplicationVersion
  #  Properties:
  #    ApplicationName: !Sub ${ElasticApplicationName}-app
  #    Description: AWS ElasticBeanstalk Birds Classifier Application Version
  #    SourceBundle: 
  #      S3Bucket: 
  #        Fn::Join: 
  #          - "-"
  #          - 
  #            - "elasticbeanstalk-samples"
  #            - Ref: "AWS::Region"
  #      S3Key: "docker-sample-app.zip"

  CloudFormationEBConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Sub ${ElasticApplicationName}-app
      Description: AWS ElasticBeanstalk Birds Classifier Configuration Template
      OptionSettings:
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: '1'
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: '1'
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value: !Ref MyInstanceProfile
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: InstanceType
        Value: c5a.2xlarge     
      SolutionStackName: 64bit Amazon Linux 2 v3.4.19 running Docker
  
  MyInstanceRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Beanstalk EC2 role
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
  
  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref MyInstanceRole
